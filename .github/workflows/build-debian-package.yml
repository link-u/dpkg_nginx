name: Build debian package on push or release-tags or pull request.

on:
  push:
    branches:
      - master
    tags:
      - v*

  pull_request:
    branches:
      - master

jobs:
  build_for_bionic:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Checkout submodules
        shell: bash
        run: |
          sed -i -e 's/git\@github\.com\:/https\:\/\/github.com\//g' .gitmodules
          git submodule init
          git submodule sync --recursive
          git submodule update
          git submodule foreach bash -c "sed -i -e 's/git\@github\.com\:/https\:\/\/github.com\//g' .gitmodules || true"
          git submodule foreach git submodule sync --recursive
          git submodule foreach git submodule init
          git submodule foreach git submodule update --init --force --recursive

      - name: Install debhelper dh-make, and dependent packages for building nginx
        shell: bash
        run: |
          sudo apt install -y debhelper dh-make libxml2-dev libxslt1-dev libgd-dev libgeoip-dev

      - name: Build debian package
        shell: bash
        env:
          REF: ${{ github.ref }}
          COMMIT: ${{ github.sha }}
        run: |
          code_name="$(lsb_release -cs)"
          cp "scripts/changelog_template" "nginx/debian/changelog"
          sed -i -r "s/%DATE%/$(LC_ALL=C TZ=JST-9 date '+%a, %d %b %Y %H:%M:%S %z')/g" nginx/debian/changelog
          if [ "${REF:0:11}" = "refs/tags/v" ]; then
            sed -i -r "s/X.Y.Z-alpha/${REF:11}.$(TZ=JST-9 date +%Y%m%d)+${code_name}/g" nginx/debian/changelog
          else
            nginx_src_dir=$(basename "$(ls -1vd nginx/nginx-*.tar.gz | tail -n 1)" .tar.gz)
            sed -i -r "s/X.Y.Z-alpha/${nginx_src_dir:6}-$(TZ=JST-9 date +%Y%m%d.%H%M%S).${COMMIT:0:7}+${code_name}/g" nginx/debian/changelog
          fi
          bash scripts/build.sh

      - name: Get debian package name
        shell: bash
        run: |
          echo "::set-output name=filename::$(basename $(find . -type f -name \*.deb))"
        id: get_deb_name

      - name: Upload result
        uses: actions/upload-artifact@v1
        with:
          name: nginx_bionic
          path: nginx/${{ steps.get_deb_name.outputs.filename }}

  release_for_bionic:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build_for_bionic
    runs-on: ubuntu-18.04
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: nginx_bionic

      - name: Get debian package name
        shell: bash
        run: |
          echo "::set-output name=filename::$(basename $(find ./nginx_bionic -type f -name \*.deb))"
        id: get_deb_name

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: nginx_bionic/${{ steps.get_deb_name.outputs.filename }}
          asset_name: ${{ steps.get_deb_name.outputs.filename }}
          asset_content_type: application/vnd.debian.binary-package
