name: Build debian package on push or release-tags or pull request.

on:
  push:
    branches:
      - '*'
    tags:
      - v*

  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        codename: [bionic, focal]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Build debian package
        uses: link-u/execute-on-separated-ubuntu@master
        with:
          script: scripts/all.sh
          on: ${{ matrix.codename }}

      - name: Get debian package name
        shell: bash
        run: |
          echo "::set-output name=filename::$(basename $(find . -type f -name \*.deb))"
        id: get_deb_name

      - name: Upload result
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.codename }}
          path: nginx/${{ steps.get_deb_name.outputs.filename }}

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  upload:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        codename: [bionic, focal]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.codename }}
          path: artifact
      - name: Get debian package name
        shell: bash
        run: |
          echo "::set-output name=filename::$(find artifact/ -type f -name \*.deb)"
        id: get_deb_name
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: artifact/${{ steps.get_deb_name.outputs.filename }}
          asset_name: ${{ steps.get_deb_name.outputs.filename }}
          asset_content_type: application/vnd.debian.binary-package
